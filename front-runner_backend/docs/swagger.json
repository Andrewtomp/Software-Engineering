{
    "swagger": "2.0",
    "info": {
        "description": "API documentation for the Front Runner application.",
        "title": "Front Runner API",
        "contact": {
            "name": "API Support",
            "email": "jonathan.bravo@ufl.edu"
        },
        "license": {
            "name": "MIT",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/data/image/{filename}": {
            "get": {
                "description": "Fetches an image if it exists and they are authorized.",
                "produces": [
                    "image/*"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Retrive an image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filepath of image",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "User is not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Requested image does not exist",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Unable to retrieve User ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/data/upload": {
            "post": {
                "description": "Uploads an image if the user is authorized.",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "images"
                ],
                "summary": "Upload an image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Filepath of image",
                        "name": "filename",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Filename of uploaded image",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "User is not logged in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Requested image does not exist",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "415": {
                        "description": "Invalid file type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "File already exists",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "description": "Authenticates a user and creates a session.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "authentication",
                    "login"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logged in successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Email and password are required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "get": {
                "description": "Logs out the current user by clearing the session.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "authentication",
                    "logout"
                ],
                "summary": "User logout",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "description": "Registers a new user using email, password, and an optional business name.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "authentication",
                    "user",
                    "dbtable"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Business name",
                        "name": "business_name",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Email and password are required or invalid email format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Email already in use or database error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/validemail": {
            "get": {
                "description": "Checks if the provided email address is in a valid format. Returns true if valid, false otherwise.",
                "tags": [
                    "utility",
                    "email",
                    "validate"
                ],
                "summary": "Validate email address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email address to validate",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "true if email is valid, false otherwise",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        }
    }
}